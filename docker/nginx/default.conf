# Define an upstream for our PHP-FPM service
upstream fastcgi_backend {
    server php:9000;
}

server {
    listen 80;
    server_name _; 

    set $MAGE_ROOT /var/www/html;
    # Set MAGE_MODE in docker-compose environment variables if possible
    # set $MAGE_MODE developer; 
    root $MAGE_ROOT/pub;

    index index.php;
    autoindex off;
    charset UTF-8;

    location / {
        try_files $uri $uri/ /index.php$is_args$args;
    }

    location ~ \.php$ {
        fastcgi_pass fastcgi_backend;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
        fastcgi_param HTTPS on; 
        fastcgi_param SCRIPT_NAME /magento-dev/index.php;
    }

    # increase buffer size due to "upstream sent too big header" errors
    fastcgi_buffer_size 128k;
    fastcgi_buffers 4 256k;
    fastcgi_busy_buffers_size 256k;

    # Nginx configuration for serving static files
    location /static/ {
        if (!-f $request_filename) {
            rewrite ^/static/(version\d*/)?(.*)$ /static.php?resource=$2 last;
        }
        expires max;
    }

    # Nginx configuration for serving media files
    location /media/ {
        try_files $uri $uri/ /get.php?$args;

        location ~* \.(ico|jpg|jpeg|png|gif|svg|js|css|swf|eot|ttf|otf|woff|woff2)$ {
            add_header 'Access-control-Allow-Origin' '*';
            expires max;
        }
        location ~* \.php$ {
            fastcgi_pass   fastcgi_backend;
            fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include        fastcgi_params;
        }
    }

    # PHP entry point for generating static files
    location ~ ^/static/(version\d*/)?\.php$ {
        fastcgi_pass   fastcgi_backend;
        fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include        fastcgi_params;
        fastcgi_param  HTTPS on;
    }
}